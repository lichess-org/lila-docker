#!/bin/bash
set -e

show_help() {
    echo "Usage: $0 [start|stop|down]"
}

run_start() {
    touch .env
    docker compose run --rm -it lila_docker_rs bash -c "cd /mnt && cargo run"

    echo "Cloning repos..."
    repos=(lila lila-ws lila-db-seed lila-engine lila-fishnet lila-gif lila-search lifat scalachess api pgn-viewer chessground berserk)
    for repo in "${repos[@]}"; do
        [ ! -d repos/$repo ] && git clone https://github.com/lichess-org/$repo.git repos/$repo
    done

    cd repos/lila
    git submodule update --init
    cd ../..

    COMPOSE_PROFILES=$(all_profiles) docker compose build

    echo "Compiling lila js/css..."
    docker compose run --rm ui bash -c "/lila/ui/build"

    echo "Compiling chessground..."
    docker compose run --rm ui bash -c "cd /chessground && pnpm install && pnpm run compile"

    export $(cat .env | xargs)
    docker compose up -d

    if [ "$SETUP_DB" = "true" ]; then
        setup_database
    fi
}

run_stop() {
    COMPOSE_PROFILES=$(all_profiles) docker compose stop
}

run_down() {
    COMPOSE_PROFILES=$(all_profiles) docker compose down -v
}

all_profiles() {
    # return all Docker Compose profiles as a comma-separated string
    docker compose config --profiles | xargs | sed -e 's/ /,/g'
}

setup_database() {
    # wait for mongodb to be ready
    while ! docker exec $(docker compose ps -q mongodb) mongo --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
        echo "Waiting for mongodb to be ready..."
        sleep 1
    done

    echo "Adding test data..."

    docker compose run --rm -v $(pwd)/repos/lila:/lila mongodb bash -c \
        "mongo --host mongodb lichess /lila/bin/mongodb/indexes.js"

    docker compose run --rm python bash -c \
        "pip install pymongo && python /lila-db-seed/spamdb/spamdb.py --uri=mongodb://mongodb/lichess --password=$PASSWORD --su-password=$SU_PASSWORD --es --es-host=elasticsearch:9200"

    docker compose run --rm -v $(pwd)/scripts:/scripts mongodb bash -c \
        "mongosh --host mongodb lichess --file /scripts/mongodb/users.js"
}

case $1 in
    --help|-h)
        show_help
        exit 0
        ;;
    start)
        run_start
        ;;
    stop)
        run_stop
        ;;
    down)
        run_down
        ;;
    *)
        show_help
        exit 1
        ;;
esac
