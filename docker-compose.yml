services:
  mongodb:
    image: mongo:5.0.25-focal
    restart: unless-stopped
    networks:
      - lila-network
    volumes:
      - ./repos/lila:/lila
      - ./scripts:/scripts

  redis:
    image: redis:7.2.4-alpine3.19
    restart: unless-stopped
    networks:
      - lila-network

  lila:
    build:
      context: docker
      dockerfile: lila.Dockerfile
    restart: unless-stopped
    networks:
      - lila-network
    environment:
      - LILA_DOMAIN=${LILA_DOMAIN:-localhost:8080}
      - LILA_URL=${LILA_URL:-http://localhost:8080}
      - ENABLE_MONITORING=${ENABLE_MONITORING:-false}
    volumes:
      - ./repos/lila:/lila
      - ./repos/chessground:/chessground
      - ./repos/pgn-viewer:/pgn-viewer
      - ./repos/bbpPairings:/opt/bbpPairings
      - ./repos/scalachess:/scalachess
      - ./conf/lila.conf:/lila/conf/application.conf

  lila_ws:
    build:
      context: docker
      dockerfile: lila-ws.Dockerfile
    restart: unless-stopped
    networks:
      - lila-network
    environment:
      - LILA_URL=${LILA_URL:-http://localhost:8080}
      - ENABLE_MONITORING=${ENABLE_MONITORING:-false}
    volumes:
      - ./repos/lila-ws:/lila-ws
      - ./conf/lila-ws.conf:/lila-ws.conf

  nginx:
    image: nginx:1.25.4-alpine3.18-slim
    restart: unless-stopped
    networks:
      - lila-network
    ports:
      - 8080:80
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./repos/lila/public:/lila/public
      - ./repos/lifat:/lifat
      - ./nginx:/nginx
    depends_on:
      - lila
      - lila_ws

  mobile:
    build:
      context: docker
      dockerfile: mobile.Dockerfile
    environment:
      - LILA_URL=${LILA_URL:-http://localhost:8080}
    tty: true
    volumes:
      - ./repos/dartchess:/dartchess
      - ./repos/mobile:/app
    profiles:
      - mobile

  api_docs:
    build:
      context: docker
      dockerfile: api-docs.Dockerfile
    restart: unless-stopped
    ports:
      - 8089:8089
    volumes:
      - ./repos/api:/api
    profiles:
      - api-docs

  chessground:
    build:
      context: docker
      dockerfile: chessground.Dockerfile
    restart: unless-stopped
    ports:
      - 8090:8080
    volumes:
      - ./repos/chessground:/chessground
    profiles:
      - chessground

  pgn_viewer:
    build:
      context: docker
      dockerfile: pgn-viewer.Dockerfile
    restart: unless-stopped
    ports:
      - 8091:8080
    volumes:
      - ./repos/pgn-viewer:/pgn-viewer
    profiles:
      - pgn-viewer

  lila_engine:
    build:
      context: docker
      dockerfile: lila-engine.Dockerfile
    restart: unless-stopped
    networks:
      - lila-network
    ports:
      - 9666:9666
    volumes:
      - ./repos/lila-engine:/lila-engine
    profiles:
      - external-engine

  lila_fishnet:
    build:
      context: docker
      dockerfile: lila-fishnet.Dockerfile
    environment:
      - KAMON_ENABLED=${ENABLE_MONITORING:-false}
      # - HTTP_API_LOGGER=true
    restart: unless-stopped
    networks:
      - lila-network
    volumes:
      - ./repos/lila-fishnet:/lila-fishnet
    profiles:
      - stockfish-play

  fishnet_play:
    image: niklasf/fishnet:2.9.2
    restart: unless-stopped
    entrypoint: /fishnet --endpoint http://lila_fishnet:9665/fishnet --max-backoff 5
    networks:
      - lila-network
    profiles:
      - stockfish-play

  fishnet_analysis:
    image: niklasf/fishnet:2.9.2
    restart: unless-stopped
    entrypoint: /fishnet --endpoint http://lila:9663/fishnet --max-backoff 5
    networks:
      - lila-network
    profiles:
      - stockfish-analysis

  python:
    build:
      context: docker
      dockerfile: python.Dockerfile
    networks:
      - lila-network
    volumes:
      - ./repos/berserk:/berserk
      - ./repos/lila-db-seed:/lila-db-seed
      - ./scripts:/scripts
    profiles:
      - utils

  ui:
    build:
      context: docker
      dockerfile: ui.Dockerfile
    restart: unless-stopped
    networks:
      - lila-network
    volumes:
      - ./repos/lila:/lila
      - ./repos/chessground:/chessground
      - ./repos/pgn-viewer:/pgn-viewer
    profiles:
      - utils

  elasticsearch:
    image: elasticsearch:7.17.4
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - http.cors.allow-origin=/.*/
      - http.cors.enabled=true
      - xpack.security.enabled=false
    networks:
      - lila-network
    ports:
      - 9200:9200
    profiles:
      - search

  elasticvue:
    image: cars10/elasticvue:1.0.4
    restart: unless-stopped
    volumes:
      - ./conf/elasticvue.json:/usr/share/nginx/html/api/default_clusters.json
    ports:
      - 8092:8080
    networks:
      - lila-network
    profiles:
      - search

  lila_search:
    build:
      context: docker
      dockerfile: lila-search.Dockerfile
    restart: unless-stopped
    networks:
      - lila-network
    volumes:
      - ./repos/lila-search:/lila-search
      - ./conf/lila-search.conf:/lila-search/conf/application.conf
    profiles:
      - search

  lila_gif:
    build:
      context: docker
      dockerfile: lila-gif.Dockerfile
    restart: unless-stopped
    ports:
      - 6175:6175
    networks:
      - lila-network
    volumes:
      - ./repos/lila-gif:/lila-gif
    profiles:
      - gifs

  picfit:
    build:
      context: docker
      dockerfile: picfit.Dockerfile
    restart: unless-stopped
    ports:
      - 3001:3001
    networks:
      - lila-network
    volumes:
      - ./conf/picfit.json:/mnt/config.json
    profiles:
      - thumbnails

  mailpit:
    image: axllent/mailpit:v1.14.4
    restart: unless-stopped
    ports:
      - 8025:8025
    networks:
      - lila-network
    profiles:
      - email

  mongo_express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - lila-network
    depends_on:
      - mongodb
    profiles:
      - mongo-express

  influxdb:
    image: influxdb:2.7.5-alpine
    restart: unless-stopped
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=secret
      - DOCKER_INFLUXDB_INIT_ORG=lila-docker
      - DOCKER_INFLUXDB_INIT_BUCKET=kamon
    networks:
      - lila-network
    profiles:
      - monitoring

networks:
  lila-network:
    driver: bridge
